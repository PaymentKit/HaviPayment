//
//  WDPRCommonDataService.h
//  Mdx
//
//  Created by Vidos, Hugh on 8/2/13.
//  Copyright (c) 2013 WDPRO. All rights reserved.
//

#import <Foundation/Foundation.h>
#import <AFNetworking/AFNetworking.h>
#import "GROAuth2SessionManager.h"
#import "WDPRTimeEventTracker.h"

@class WDPRCacheMetadata;

// Common completion callback definitions
typedef void (^ServiceSuccess)(id result);
typedef void (^ServiceSuccessWithHeader)(id result, NSDictionary *responseHeader);
typedef void (^ServiceFailure)(NSError *error);
typedef void (^AFNSuccess)(id);
typedef void (^AFNSuccessWithHeader)(id, NSDictionary *);
typedef void (^AFNFailure)(NSError *);

typedef void (^AFOpSuccess)(AFHTTPRequestOperation *, id);
typedef void (^AFOpFailure)(AFHTTPRequestOperation *, NSError *);

typedef NS_ENUM(NSUInteger, ServiceMethod)
{
    kServiceGet     = 0x0,
    kServicePost    = 0x1,
    
    // these last two are only used
    // by incremental facilitySync
    
    // send parameters as plainText
    kServicePlainTextParameters = (1 << 1),
    
    // store raw response in temp file
    // before json conversion to objects
    kServiceUseTempFileForResponse = (1 << 2),
};

typedef NS_ENUM(NSUInteger, WDPRParameterEncoding)
{
    WDPRFormURLParameterEncoding,
    WDPRJSONParameterEncoding,
};

AFNSuccess AFNServiceSuccess(ServiceSuccess serviceSuccess);
AFNSuccess AFNServiceSuccessWithheader(ServiceSuccessWithHeader serviceSuccess);
AFNFailure AFNServiceFailure(ServiceFailure serviceFailure);

@protocol WDPRCommonDataServiceDelegate <NSObject>

- (void)commonDataServiceWantsToShowCommonError:(NSError *) error withMessage:(NSString *)message;

- (BOOL) isParameterAModelObject:(id)parameter;
- (NSDictionary *) jsonDictionaryFromModel:(id) model;
- (id) modelWithClass:(id)modelClass andData:(id)data;

@end

/// Common class to allow timing measurement for calls.  This only tracks in
/// DEBUG builds and if |init| or |initWithBaseURL:clientID:secret| are used.
@interface WDPRCommonDataService : GROAuth2SessionManager

/// @name Properties

/// IMPORTANT: this needs to be set before making an calls to should be mapped to an Instance
/// of a specific model object.
///
///  an example would be
/// @{kServiceEndPointGuestProfileLinks: [MdxUserProfile class]}
/// where the kServiceEndPointGuestProfileLinks response maps to an instance of MdxUserProfile

@property (nonatomic, strong) NSDictionary * classResponseMapping;

/// A set of calls, their times and any errors.  This continues to grow until
/// a reset, so dupes are allowed, but that might indicate a problem.
@property(nonatomic, strong, readonly) WDPRTimeEventTracker *eventTimes;

/// Forward URL is used when a 204 returns, the value for the forward url can point
/// to another url that should be redirected to. If coming from NGE, it's important
/// to split this url up and add the nge domain back into it.
@property (atomic) NSString *returnURL;

@property (nonatomic, weak) id<WDPRCommonDataServiceDelegate> serviceDelegate;

@property (nonatomic, strong, readonly) NSMutableDictionary *cacheMetadata;

/// Sets an AFSecurityPolicy to allow invalid certificates for all AFHTTPRequestOperations when true
@property (atomic) BOOL allowInvalidCertificatesOnOperations;

// This method is made public to provide conversation id outside because currently core service doesn't handle html response and we get nil response object back and at this time making change in core service will be risky and may cause regressions, so the safe approach is making a separate call outside without using core services extensions, in order to do that we need conversation id.
- (NSString *)appInstanceId DEPRECATED_ATTRIBUTE;

/// @name Instance Methods
/**
 Safe execution of successHandler
 @param successHandler block to be executed
 @param param parameters
 */
- (void)commonAFNSuccess:(AFNSuccess)successHandler param:(id)param;

/**
 Safe execution of failureHandler
 @param failureHandler block to be executed
 @param error NSError generated by the service call
 */
- (void)commonAFNFailure:(AFNFailure)failureHandler error:(NSError *)error;

/**
 Registers a new cache meta data object which contains important information during caching of a service response
 @param cachedResponse The WDPRCacheMetadata object to register
 @discussion If a key with the same name already exists, NO action will be taken
 */
- (void)registerCacheMetadata:(WDPRCacheMetadata *)cacheMetadata;

/**
 Returns a cached meta data object whose identifier matches the one passed as an argument
 @param requestId The unique identifier for a cached response meta data object
 @return A cached meta data object whose identifier matches the one passed as an argument, IF no object was found
 for this id, a DEFAULT cache meta data object will be returned.
 */
- (WDPRCacheMetadata *)cacheMetadataForRequestId:(NSString *)requestId;

/**
 Returns NSError's status code
 @param error NSError to evaluate
 */
- (NSInteger)statusCode:(NSError *)error;

/**
 Builds a set of URLs with a common theme with the tokens past in. This allows
 to build a set of URLs for a batch / bulk call.
 @param url - NSString that can take a token with the form of {token_id}.
 @param tokens - NSArray containing the url set with a NSDictionary
 containing the tokens; key of token_id and a value that will replace it.
 @[
 @{@"token_id": @"token_value",
 @"token_id2": @"token_value"},
 @{@"token_id": @"token_value",
 @"token_id2": @"token_value"}];
 */
- (NSSet *)buildSetFromService:(NSString *)service
                    withTokens:(NSArray *)tokens
                 andParameters:(NSDictionary *)parameters;


- (void)batchServiceWithHost:(NSString *)serviceHost
                        urls:(NSSet*)serviceURLs
                      method:(NSString *)method
                     localID:(NSString *)localID
                     success:(ServiceSuccess)success
                     failure:(ServiceFailure)failure;

- (NSArray *)buildBatchServiceWithURLs:(NSSet*)serviceURLs
                                method:(NSString *)method;

/**
 Template method - descendants should override accordingly
 @param request The HTTP request to set the authorization to
 */
- (void)setAuthorizationHeaderForRequest:(NSMutableURLRequest *)request;

/**
 Template method - descendants should override accordingly
 @param request The HTTP request
 @param clientSucces Block called upon success, with id object containing any detailed info returned
 by the link.
 @param clientFailure Block called, with error object, if service call fails.
 */
- (AFNFailure)failureBlockForRequest:(NSMutableURLRequest *)request
                             success:(AFNSuccess)clientSuccess
                             failure:(AFNFailure)clientFailure;

/**
 Template method - descendants should override accordingly
 @param request The HTTP request
 @param clientSucces Block called upon success, with id object containing any detailed info returned
 by the link.
 @param clientSuccesWithHeader Block called upon success, with id object containing any detailed info returned
 by the link and dictionary containing response header.
 @param clientFailure Block called, with error object, if service call fails.
 */
- (AFNFailure)failureBlockForRequest:(NSMutableURLRequest *)request
                             success:(AFNSuccess)clientSuccess
                   successWithHeader:(AFNSuccessWithHeader)clientSuccessWithHeader
                             failure:(AFNFailure)clientFailure;

- (void)getDataUsingEndpoint:(NSString *)path
                      tokens:(NSDictionary *)tokens
                  parameters:(NSDictionary *)parameters
                     success:(ServiceSuccess)success
                     failure:(ServiceFailure)failure;

//Will override the incoming max-age http response header for specific calls, allowing longer or shorter
//cache times for local cache systems, a negative value for cacheTime will default to the server value
- (void)getDataUsingEndpoint:(NSString *)path
                      tokens:(NSDictionary *)tokens
                  parameters:(NSDictionary *)parameters
         maxAgeCacheOverride:(NSInteger)cacheTime
                     success:(ServiceSuccess)success
                     failure:(ServiceFailure)failure;

/**
 Generic GET service call that wraps returns results into a dictionary from raw json data.
 
 @param path - A fully qualified url path.
 @param success - Block called upon success, with data dictionary containing any detailed info returned
 by the link.
 @param failure - Block called, with error object, if service call fails.
 */
- (void)getDataUsingPath:(NSString *)path
              parameters:(NSDictionary *)parameters
                 success:(ServiceSuccess)success
                 failure:(ServiceFailure)failure;
/**
 Generic GET service call that wraps returns results into a dictionary from raw json data.
 
 @param path - A fully qualified url path.
 @param parameters The parameters to be set as a query string
 @param turnOffCache Boolean that determines whether to ignore local cache or not
 @param success - Block called upon success, with data dictionary containing any detailed info returned
 by the link.
 @param failure - Block called, with error object, if service call fails.
 */
- (void)getDataUsingPath:(NSString *)path
              parameters:(NSDictionary *)parameters
            turnOffCache:(BOOL)turnOffCache
                 success:(ServiceSuccess)success
                 failure:(ServiceFailure)failure;

/**
 Generic GET service call that wraps returns results into a dictionary from raw json data.
 
 @param path - A fully qualified url path.
 @param parameters The parameters to be set as a query string
 @param overrideHeaders a dictionary of key value pairs to set additional request headers
 @param success - Block called upon success, with data dictionary containing any detailed info returned
 by the link.
 @param failure - Block called, with error object, if service call fails.
 */
- (void)getDataUsingPath:(NSString *)path
              parameters:(NSDictionary *)parameters
         overrideHeaders:(NSDictionary *)overrideHeaders
                 success:(ServiceSuccess)success
                 failure:(ServiceFailure)failure;

/**
 Generic GET service call that wraps returns results into a dictionary from raw json data and returns response headers from operation
 
 @param path - A fully qualified url path.
 @param parameters The parameters to be set as a query string
 @param overrideHeaders a dictionary of key value pairs to set additional request headers
 @param success - Block called upon success, with data dictionary containing any detailed info returned
 by the link and response header.
 @param failure - Block called, with error object, if service call fails.
 */
- (void)getDataUsingPath:(NSString *)path
              parameters:(NSDictionary *)parameters
         overrideHeaders:(NSDictionary *)overrideHeaders
       successWithHeader:(ServiceSuccessWithHeader)success
                 failure:(ServiceFailure)failure;

/**
 Generic GET service call that wraps returns results into a dictionary from raw json data and returns response headers from operation
 
 @param path - A fully qualified url path.
 @param parameters The parameters to be set as a query string
 @param overrideHeaders a dictionary of key value pairs to set additional request headers
 @param turnOffCache Boolean that determines whether to ignore local cache or not
 @param success - Block called upon success, with data dictionary containing any detailed info returned
 by the link and response header.
 @param failure - Block called, with error object, if service call fails.
 */
- (void)getDataUsingPath:(NSString *)path
              parameters:(NSDictionary *)parameters
         overrideHeaders:(NSDictionary *)overrideHeaders
            turnOffCache:(BOOL)turnOffCache
       successWithHeader:(ServiceSuccessWithHeader)successWithHeader
                 failure:(ServiceFailure)failure;

/**
 Generic GET service call that wraps returns results into a dictionary from raw json data.
 
 @param path - A fully qualified url path.
 @param parameters The parameters to be set as a query string
 @param overrideHeaders a dictionary of key value pairs to set additional request headers
 @param turnOffCache Boolean that determines whether to ignore local cache or not
 @param success - Block called upon success, with data dictionary containing any detailed info returned
 by the link.
 @param failure - Block called, with error object, if service call fails.
 */
- (void)getDataUsingPath:(NSString *)path
              parameters:(NSDictionary *)parameters
         overrideHeaders:(NSDictionary *)overrideHeaders
            turnOffCache:(BOOL)turnOffCache
                 success:(ServiceSuccess)success
                 failure:(ServiceFailure)failure;

/**
 Generic GET service call that wraps returns results into a dictionary from raw json data.
 
 @param path - A fully qualified url path.
 @param parameters The parameters to be set as a query string
 @param overrideHeaders a dictionary of key value pairs to set additional request headers
 @param cacheMetadataId Id for a cache meta data object that will provide caching info for this request
 @param success - Block called upon success, with data dictionary containing any detailed info returned
 by the link.
 @param failure - Block called, with error object, if service call fails.
 */
- (void)getDataUsingPath:(NSString *)path
              parameters:(NSDictionary *)parameters
         overrideHeaders:(NSDictionary *)overrideHeaders
         cacheMetadataId:(NSString *)cachedRequestId
                 success:(ServiceSuccess)success
                 failure:(ServiceFailure)failure;

/**
 Generic user authenticated POST service call.
 
 @param path - A fully-qualified path.
 @param parameters - JSON dictionary to post to the server.
 @param success - Block called upon success, with data dictionary containing any detailed info returned
 by the link.
 @param failure - Block called, with error object, if service call fails.
 */
- (void)postDataUsingPath:(NSString *)path
               parameters:(id)parameters
                  success:(ServiceSuccess)success
                  failure:(ServiceFailure)failure;

/**
 Generic user authenticated POST service call.
 
 @param path - A fully-qualified path.
 @param parameters - JSON dictionary to post to the server.
 @param overrideHeaders a dictionary of key value pairs to set additional request headers
 @param success - Block called upon success, with data dictionary containing any detailed info returned
 by the link.
 @param failure - Block called, with error object, if service call fails.
 */
- (void)postDataUsingPath:(NSString *)path
               parameters:(id)parameters
          overrideHeaders:(NSDictionary *)overrideHeaders
                  success:(ServiceSuccess)success
                  failure:(ServiceFailure)failure;

/**
 Generic user authenticated POST service call.
 
 @param path - A fully-qualified path.
 @param parameters - JSON dictionary to post to the server.
 @param parameterEncoding set the request encoding
 @param overrideHeaders a dictionary of key value pairs to set additional request headers
 @param success - Block called upon success, with data dictionary containing any detailed info returned
 by the link.
 @param failure - Block called, with error object, if service call fails.
 */
- (void)postDataUsingPath:(NSString *)path
               parameters:(id)parameters
        parameterEncoding:(WDPRParameterEncoding)paramEncoding
          overrideHeaders:(NSDictionary *)overrideHeaders
                  success:(ServiceSuccess)success
                  failure:(ServiceFailure)failure;

/**
 Generic POST service call that wraps returns results into a dictionary from raw json data and returns response headers from operation.
 
 @param path - A fully-qualified path.
 @param parameters - JSON dictionary to post to the server.
 @param overrideHeaders a dictionary of key value pairs to set additional request headers
 @param successWithHeader - Block called upon success, with data dictionary containing any detailed info returned
 by the link and response header.
 @param failure - Block called, with error object, if service call fails.
 */
- (void)postDataUsingPath:(NSString *)path
               parameters:(id)parameters
          overrideHeaders:(NSDictionary *)overrideHeaders
        successWithHeader:(ServiceSuccessWithHeader)successWithHeader
                  failure:(ServiceFailure)failure;

/**
 Generic POST service call that wraps returns results into a dictionary from raw json data and returns response headers from operation.
 
 @param path - A fully-qualified path.
 @param parameters - JSON dictionary to post to the server.
 @param parameterEncoding set the request encoding
 @param overrideHeaders a dictionary of key value pairs to set additional request headers
 @param successWithHeader - Block called upon success, with data dictionary containing any detailed info returned
 by the link and response header.
 @param failure - Block called, with error object, if service call fails.
 */
- (void)postDataUsingPath:(NSString *)path
               parameters:(id)parameters
        parameterEncoding:(WDPRParameterEncoding)paramEncoding
          overrideHeaders:(NSDictionary *)overrideHeaders
        successWithHeader:(ServiceSuccessWithHeader)successWithHeader
                  failure:(ServiceFailure)failure;

/**
 Generic user authenticated POST service call.
 
 @param path - A fully-qualified path.
 @param object - object to add to the HTTP body
 @param success - Block called upon success, with data dictionary containing any detailed info returned
 by the link.
 @param failure - Block called, with error object, if service call fails.
 */
- (void)postDataUsingPath:(NSString *)path
               jsonObject:(id)object
                  success:(ServiceSuccess)success
                  failure:(ServiceFailure)failure;

/**
 Generic user authenticated POST service call.
 
 @param path - A fully-qualified path.
 @param parameters - JSON dictionary to post to the server.
 @param success - Block called upon success, with data dictionary containing any detailed info returned
 by the link.
 @param failure - Block called, with error object, if service call fails.
 */
- (void)postDataUsingPath:(NSString *)path
 formUrlEncodedParameters:(NSString *)parameters
                  success:(ServiceSuccess)success
                  failure:(ServiceFailure)failure;

/**
 Generic user authenticated POST service call.
 
 @param path - A fully-qualified path.
 @param parameters - JSON dictionary to post to the server.
 @param overrideHeaders a dictionary of key value pairs to set additional request headers
 @param success - Block called upon success, with data dictionary containing any detailed info returned
 by the link.
 @param failure - Block called, with error object, if service call fails.
 */
- (void)postDataUsingPath:(NSString *)path
 formUrlEncodedParameters:(NSString *)parameters
          overrideHeaders:(NSDictionary *)overrideHeaders
                  success:(ServiceSuccess)success
                  failure:(ServiceFailure)failure;

/**
 Generic user authenticated PUT service call.
 
 @param path - A fully-qualified path.
 @param parameters - JSON dictionary to put to the server.
 @param success - Block called upon success, with data dictionary containing any detailed info returned
 by the link.
 @param failure - Block called, with error object, if service call fails.
 */
- (void)putDataUsingPath:(NSString *)path
              parameters:(id)parameters
                 success:(ServiceSuccess)success
                 failure:(ServiceFailure)failure;

/**
 Generic user authenticated PUT service call.
 
 @param path - A fully-qualified path.
 @param parameters - JSON dictionary to put to the server.
 @param overrideHeaders a dictionary of key value pairs to set additional request headers
 @param success - Block called upon success, with data dictionary containing any detailed info returned
 by the link.
 @param failure - Block called, with error object, if service call fails.
 */
- (void)putDataUsingPath:(NSString *)path
              parameters:(id)parameters
         overrideHeaders:(NSDictionary *)overrideHeaders
                 success:(ServiceSuccess)success
                 failure:(ServiceFailure)failure;

/**
 Generic user authenticated PUT service call and returns response headers from operation.
 
 @param path - A fully-qualified path.
 @param parameters - JSON dictionary to put to the server.
 @param overrideHeaders a dictionary of key value pairs to set additional request headers
 @param successWithHeader - Block called upon success, with data dictionary containing any detailed info returned
 by the link and response headers.
 @param failure - Block called, with error object, if service call fails.
 */
- (void)putDataUsingPath:(NSString *)path
              parameters:(id)parameters
         overrideHeaders:(NSDictionary *)overrideHeaders
       successWithHeader:(ServiceSuccessWithHeader)successWithHeader
                 failure:(ServiceFailure)failure;

/**
 Generic user authenticated PUT service call.
 
 @param path - A fully-qualified path.
 @param parameters - JSON dictionary to post to the server.
 @param parameterEncoding set the request encoding
 @param overrideHeaders a dictionary of key value pairs to set additional request headers
 @param success - Block called upon success, with data dictionary containing any detailed info returned
 by the link.
 @param failure - Block called, with error object, if service call fails.
 */
- (void)putDataUsingPath:(NSString *)path
              parameters:(id)parameters
       parameterEncoding:(WDPRParameterEncoding)paramEncoding
         overrideHeaders:(NSDictionary *)overrideHeaders
                 success:(ServiceSuccess)success
                 failure:(ServiceFailure)failure;

/**
 Generic user authenticated DELETE service call.
 
 @param path - A fully-qualified path.
 @param parameters - JSON dictionary describing data to be deleted.
 @param success - Block called upon success, parameter will be nil.
 @param failure - Block called, with error object, if service call fails.
 */
- (void)deleteDataUsingPath:(NSString *)path
                 parameters:(NSDictionary *)parameters
                    success:(ServiceSuccess)success
                    failure:(ServiceFailure)failure;

/**
 Generic HEAD service call
 
 @param path - A fully qualified url path.
 @param parameters The parameters to be set as a query string
 @param success - Block called upon success, with data dictionary containing any detailed info returned
 by the link.
 @param failure - Block called, with error object, if service call fails.
 */
- (void)performHeadUsingPath:(NSString *)path
                  parameters:(NSDictionary *)parameters
                     success:(ServiceSuccess)success
                     failure:(ServiceFailure)failure;

/**
 Method to call into the expand-service service.
 
 @param url - The resource that the expand service performs the query on.
 @param parameters - Dictionary of parameters.
 @param success - Block called upon success, with data dictionary containing any detailed info returned
 by the link.
 @param failure - Block called, with error object, if service call fails.
 */
- (void)expandService:(NSString *)url
           parameters:(NSDictionary *)parameters
              success:(ServiceSuccess)success
              failure:(ServiceFailure)failure;

@end
